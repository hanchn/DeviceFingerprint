{"code":"/**\n * 设备信息收集器\n * 收集设备类型和硬件支持信息\n */\nexport class DeviceCollector {\n    /**\n     * 收集设备信息\n     * @returns 设备信息对象\n     */\n    static async collect() {\n        return {\n            type: this.getDeviceType(),\n            hardware: await this.getHardwareInfo(),\n            storage: await this.getStorageInfo()\n        };\n    }\n    /**\n     * 获取设备类型\n     * @returns 设备类型\n     * @private\n     */\n    static getDeviceType() {\n        const ua = navigator.userAgent;\n        if (/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(ua)) {\n            return 'tablet';\n        }\n        if (/Mobile|Android|iP(hone|od)|IEMobile|BlackBerry|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(ua)) {\n            return 'mobile';\n        }\n        return 'desktop';\n    }\n    /**\n     * 获取硬件支持信息\n     * @returns 硬件支持信息对象\n     * @private\n     */\n    static async getHardwareInfo() {\n        return {\n            bluetooth: 'bluetooth' in navigator,\n            usb: 'usb' in navigator,\n            nfc: 'NDEFReader' in window,\n            vibration: 'vibrate' in navigator\n        };\n    }\n    /**\n     * 获取存储信息\n     * @returns 存储信息对象\n     * @private\n     */\n    static async getStorageInfo() {\n        try {\n            if ('storage' in navigator && 'estimate' in navigator.storage) {\n                const estimate = await navigator.storage.estimate();\n                return {\n                    quota: estimate.quota || 0,\n                    usage: estimate.usage || 0\n                };\n            }\n        }\n        catch (error) {\n            console.warn('Failed to get storage info:', error);\n        }\n        return {\n            quota: 0,\n            usage: 0\n        };\n    }\n}\n//# sourceMappingURL=device.js.map","references":["/Users/yuanjing/Desktop/DeviceFingerprint/src/types/index.ts"],"map":"{\"version\":3,\"file\":\"device.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/collectors/device.ts\"],\"names\":[],\"mappings\":\"AAEA;;;GAGG;AACH,MAAM,OAAO,eAAe;IAC1B;;;OAGG;IACH,MAAM,CAAC,KAAK,CAAC,OAAO;QAClB,OAAO;YACL,IAAI,EAAE,IAAI,CAAC,aAAa,EAAE;YAC1B,QAAQ,EAAE,MAAM,IAAI,CAAC,eAAe,EAAE;YACtC,OAAO,EAAE,MAAM,IAAI,CAAC,cAAc,EAAE;SACrC,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,MAAM,CAAC,aAAa;QAC1B,MAAM,EAAE,GAAG,SAAS,CAAC,SAAS,CAAC;QAC/B,IAAI,kDAAkD,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;YAChE,OAAO,QAAQ,CAAC;QAClB,CAAC;QACD,IAAI,qGAAqG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC;YACnH,OAAO,QAAQ,CAAC;QAClB,CAAC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACK,MAAM,CAAC,KAAK,CAAC,eAAe;QAClC,OAAO;YACL,SAAS,EAAE,WAAW,IAAI,SAAS;YACnC,GAAG,EAAE,KAAK,IAAI,SAAS;YACvB,GAAG,EAAE,YAAY,IAAI,MAAM;YAC3B,SAAS,EAAE,SAAS,IAAI,SAAS;SAClC,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,MAAM,CAAC,KAAK,CAAC,cAAc;QACjC,IAAI,CAAC;YACH,IAAI,SAAS,IAAI,SAAS,IAAI,UAAU,IAAI,SAAS,CAAC,OAAO,EAAE,CAAC;gBAC9D,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBACpD,OAAO;oBACL,KAAK,EAAE,QAAQ,CAAC,KAAK,IAAI,CAAC;oBAC1B,KAAK,EAAE,QAAQ,CAAC,KAAK,IAAI,CAAC;iBAC3B,CAAC;YACJ,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,IAAI,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACrD,CAAC;QACD,OAAO;YACL,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,CAAC;SACT,CAAC;IACJ,CAAC;CACF\"}","dts":{"name":"/Users/yuanjing/Desktop/DeviceFingerprint/node_modules/.cache/rollup-plugin-typescript2/placeholder/collectors/device.d.ts","writeByteOrderMark":false,"text":"import { FingerprintComponents } from '../types';\n/**\n * 设备信息收集器\n * 收集设备类型和硬件支持信息\n */\nexport declare class DeviceCollector {\n    /**\n     * 收集设备信息\n     * @returns 设备信息对象\n     */\n    static collect(): Promise<FingerprintComponents['device']>;\n    /**\n     * 获取设备类型\n     * @returns 设备类型\n     * @private\n     */\n    private static getDeviceType;\n    /**\n     * 获取硬件支持信息\n     * @returns 硬件支持信息对象\n     * @private\n     */\n    private static getHardwareInfo;\n    /**\n     * 获取存储信息\n     * @returns 存储信息对象\n     * @private\n     */\n    private static getStorageInfo;\n}\n"}}
