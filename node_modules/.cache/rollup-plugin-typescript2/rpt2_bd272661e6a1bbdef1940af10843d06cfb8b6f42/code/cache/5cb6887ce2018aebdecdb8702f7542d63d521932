{"code":"/**\n * 网络信息收集器\n * 收集网络连接信息\n */\nexport class NetworkCollector {\n    /**\n     * 收集网络信息\n     * @returns 网络信息对象\n     */\n    static async collect() {\n        const connection = this.getConnectionInfo();\n        const ipInfo = await this.getIpInfo();\n        return {\n            connection,\n            ipInfo\n        };\n    }\n    /**\n     * 获取网络连接信息\n     * @returns 网络连接信息对象\n     * @private\n     */\n    static getConnectionInfo() {\n        const connection = navigator.connection;\n        return {\n            effectiveType: connection?.effectiveType || 'unknown',\n            downlink: connection?.downlink || 0,\n            rtt: connection?.rtt || 0\n        };\n    }\n    /**\n     * 获取 IP 信息\n     * @returns IP 信息对象\n     * @private\n     */\n    static async getIpInfo() {\n        try {\n            const response = await fetch('https://ipapi.co/json/');\n            const data = await response.json();\n            return {\n                ip: data.ip,\n                country: data.country_name,\n                region: data.region,\n                city: data.city\n            };\n        }\n        catch (error) {\n            console.warn('Failed to get IP info:', error);\n            return undefined;\n        }\n    }\n}\n//# sourceMappingURL=network.js.map","references":["/Users/yuanjing/Desktop/DeviceFingerprint/src/types/index.ts"],"map":"{\"version\":3,\"file\":\"network.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/collectors/network.ts\"],\"names\":[],\"mappings\":\"AAEA;;;GAGG;AACH,MAAM,OAAO,gBAAgB;IAC3B;;;OAGG;IACH,MAAM,CAAC,KAAK,CAAC,OAAO;QAClB,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC5C,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;QAEtC,OAAO;YACL,UAAU;YACV,MAAM;SACP,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,MAAM,CAAC,iBAAiB;QAC9B,MAAM,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;QACxC,OAAO;YACL,aAAa,EAAE,UAAU,EAAE,aAAa,IAAI,SAAS;YACrD,QAAQ,EAAE,UAAU,EAAE,QAAQ,IAAI,CAAC;YACnC,GAAG,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;SAC1B,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACK,MAAM,CAAC,KAAK,CAAC,SAAS;QAC5B,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,wBAAwB,CAAC,CAAC;YACvD,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACnC,OAAO;gBACL,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,OAAO,EAAE,IAAI,CAAC,YAAY;gBAC1B,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,IAAI,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;YAC9C,OAAO,SAAS,CAAC;QACnB,CAAC;IACH,CAAC;CACF\"}","dts":{"name":"/Users/yuanjing/Desktop/DeviceFingerprint/node_modules/.cache/rollup-plugin-typescript2/placeholder/collectors/network.d.ts","writeByteOrderMark":false,"text":"import { FingerprintComponents } from '../types';\n/**\n * 网络信息收集器\n * 收集网络连接信息\n */\nexport declare class NetworkCollector {\n    /**\n     * 收集网络信息\n     * @returns 网络信息对象\n     */\n    static collect(): Promise<FingerprintComponents['network']>;\n    /**\n     * 获取网络连接信息\n     * @returns 网络连接信息对象\n     * @private\n     */\n    private static getConnectionInfo;\n    /**\n     * 获取 IP 信息\n     * @returns IP 信息对象\n     * @private\n     */\n    private static getIpInfo;\n}\n"}}
